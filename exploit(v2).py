import api
import os


api = api.LeagueClientAPI()
os.system('cls')
print("Made by Rumi-chan with love <3")
summoner = api.get('/lol-summoner/v1/current-summoner').json()
accId = summoner["accountId"]
name = summoner["displayName"]
print("Current account: " + name)
transaction = api.get_token('/storefront/v3/history/purchase').json()
transactionId = transaction['transactions']

for index, e in enumerate(transactionId):
    inventoryType = e['inventoryType']
    date = e['datePurchased']
    transId = e['transactionId']
    rfable = e['refundable']

    if inventoryType == 'CHAMPION':
        try:
            rfStatus = e['refundabilityMessage']
            try:
                if rfStatus == 'ALREADY_REFUNDED':
                    rfStatus = False
                    print('There is nothing can be refunded.')
                    break
                    
                else:
                    rfStatus = True
                    idChamp = e['itemId']
                    champ = api.getNameChamp(str(idChamp) + ".json").json()
                    champName = champ['name']
                    print("Type: " + inventoryType)
                    print('Name: ' + champName)
                    print("Date: " + date)
                    print("TransactionID: " + transId)
                    print(str('Index: '), index, str('\n'))       
                    
            except:
                pass


        except:
            rfStatus = True
            idChamp = e['itemId']
            champ = api.getNameChamp(str(idChamp) + ".json").json()
            champName = champ['name']
            print("Type: " + inventoryType)
            print('Name: ' + champName)
            print("Date: " + date)
            print("TransactionID: " + transId)
            print(str('Index: '), index, str('\n'))
        
while True:
    try:
        choice = int(input('Transaction index to refund: '))
        data = {"accountId":accId,"transactionId":transactionId[choice]["transactionId"],"inventoryType":inventoryType,"language":"en_US"}
        boost = api.postRefund('/storefront/v3/refund', data)
        print("Refunded!\n")
    except ValueError:
        print('Please enter a valid index')
        continue
    break
        
        # while True:
        #     try:
        #         choice = int(input('Transaction index to refund: '))
        #         data = {"accountId":accId,"transactionId":transactionId[choice]["transactionId"],"inventoryType":inventoryType,"language":"en_US"}
        #         boost = api.postRefund('/storefront/v3/refund', data)
        #         print("Refunded!\n")
        #     except ValueError:
        #         print('Please enter a valid index')
        #         continue
        #     break
            
input("Press Enter to continue...")